{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Resource": "*",
            "Action": [
                "access-analyzer:GetAnalyzedResource",
                "access-analyzer:GetAnalyzer",
                "access-analyzer:GetArchiveRule",
                "access-analyzer:GetFinding",
                "access-analyzer:ListAnalyzedResources",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListArchiveRules",
                "access-analyzer:ListFindings",
                "access-analyzer:ListTagsForResource",
                "acm-pca:DescribeCertificateAuthority",
                "acm-pca:DescribeCertificateAuthorityAuditReport",
                "acm-pca:ListCertificateAuthorities",
                "acm-pca:ListPermissions",
                "acm:Describe*",
                "acm:List*",
                "airflow:ListEnvironments",
                "application-autoscaling:Describe*",
                "appmesh:Describe*",
                "appmesh:List*",
                "appsync:List*",
                "athena:GetWorkGroup",
                "athena:List*",
                "autoscaling-plans:DescribeScalingPlans",
                "autoscaling:Describe*",
                "backup:DescribeRegionSettings",
                "backup:ListBackupVaults",
                "batch:DescribeComputeEnvironments",
                "batch:DescribeJobDefinitions",
                "chime:List*",
                "cloud9:Describe*",
                "cloud9:ListEnvironments",
                "clouddirectory:ListDirectories",
                "cloudformation:DescribeStack*",
                "cloudformation:GetStackPolicy",
                "cloudformation:GetTemplate",
                "cloudformation:ListStack*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudhsm:ListHapgs",
                "cloudhsm:ListHsms",
                "cloudhsm:ListLunaClients",
                "cloudsearch:DescribeDomainEndpointOptions",
                "cloudsearch:DescribeDomains",
                "cloudsearch:DescribeServiceAccessPolicies",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetTrail",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:ListTags",
                "cloudtrail:LookupEvents",
                "cloudwatch:Describe*",
                "cloudwatch:ListTagsForResource",
                "codebuild:BatchGetProjects",
                "codebuild:ListProjects",
                "codecommit:BatchGetRepositories",
                "codecommit:GetBranch",
                "codecommit:GetObjectIdentifier",
                "codecommit:GetRepository",
                "codecommit:GetRepositoryTriggers",
                "codecommit:List*",
                "codedeploy:Batch*",
                "codedeploy:Get*",
                "codedeploy:List*",
                "codepipeline:GetJobDetails",
                "codepipeline:GetPipeline",
                "codepipeline:GetPipelineExecution",
                "codepipeline:GetPipelineState",
                "codepipeline:ListPipelines",
                "codestar:Describe*",
                "codestar:List*",
                "cognito-identity:Describe*",
                "cognito-identity:ListIdentityPools",
                "cognito-identity:ListTagsForResource",
                "cognito-idp:Describe*",
                "cognito-idp:ListDevices",
                "cognito-idp:ListGroups",
                "cognito-idp:ListIdentityProviders",
                "cognito-idp:ListResourceServers",
                "cognito-idp:ListTagsForResource",
                "cognito-idp:ListUserImportJobs",
                "cognito-idp:ListUserPoolClients",
                "cognito-idp:ListUserPools",
                "cognito-idp:ListUsers",
                "cognito-idp:ListUsersInGroup",
                "cognito-sync:Describe*",
                "cognito-sync:List*",
                "comprehend:Describe*",
                "comprehend:List*",
                "config:BatchGetAggregateResourceConfig",
                "config:BatchGetResourceConfig",
                "config:Deliver*",
                "config:Describe*",
                "config:Get*",
                "config:List*",
                "datapipeline:DescribeObjects",
                "datapipeline:DescribePipelines",
                "datapipeline:EvaluateExpression",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datapipeline:QueryObjects",
                "datapipeline:ValidatePipelineDefinition",
                "datasync:Describe*",
                "datasync:List*",
                "dax:Describe*",
                "dax:ListTags",
                "detective:GetGraphIngestState",
                "detective:ListGraphs",
                "detective:ListMembers",
                "directconnect:Describe*",
                "dms:Describe*",
                "dms:ListTagsForResource",
                "ds:DescribeDirectories",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeTable",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:ListBackups",
                "dynamodb:ListGlobalTables",
                "dynamodb:ListStreams",
                "dynamodb:ListTables",
                "dynamodb:ListTagsOfResource",
                "ec2:Describe*",
                "ec2:GetManagedPrefixListAssociations",
                "ec2:GetManagedPrefixListEntries",
                "ec2:GetTransitGatewayAttachmentPropagations",
                "ec2:GetTransitGatewayMulticastDomainAssociations",
                "ec2:GetTransitGatewayPrefixListReferences",
                "ec2:GetTransitGatewayRouteTableAssociations",
                "ec2:GetTransitGatewayRouteTablePropagations",
                "ecr-public:DescribeImageTags",
                "ecr-public:DescribeImages",
                "ecr-public:DescribeRegistries",
                "ecr-public:DescribeRepositories",
                "ecr-public:GetRegistryCatalogData",
                "ecr-public:GetRepositoryCatalogData",
                "ecr-public:GetRepositoryPolicy",
                "ecr:DescribeImageScanFindings",
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
                "ecr:GetLifecyclePolicy",
                "ecr:GetRepositoryPolicy",
                "ecr:ListImages",
                "ecr:ListTagsForResource",
                "ecs:Describe*",
                "ecs:List*",
                "eks:DescribeCluster",
                "eks:DescribeNodeGroup",
                "eks:ListClusters",
                "eks:ListNodeGroups",
                "elasticache:Describe*",
                "elasticache:ListTagsForResource",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:ListTagsForResource",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticfilesystem:DescribeMountTargets",
                "elasticloadbalancing:Describe*",
                "elasticmapreduce:Describe*",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "elasticmapreduce:ListClusters",
                "elasticmapreduce:ListInstances",
                "elasticmapreduce:ListSecurityConfigurations",
                "elasticloadbalancing:Describe*",
                "es:Describe*",
                "es:ListDomainNames",
                "es:ListElasticsearchInstanceTypeDetails",
                "es:ListElasticsearchVersions",
                "es:ListTags",
                "events:Describe*",
                "events:List*",
                "events:TestEventPattern",
                "firehose:Describe*",
                "firehose:List*",
                "fms:ListComplianceStatus",
                "fms:ListPolicies",
                "forecast:ListDatasets",
                "fsx:Describe*",
                "fsx:List*",
                "gamelift:ListBuilds",
                "gamelift:ListFleets",
                "glacier:DescribeVault",
                "glacier:GetVaultAccessPolicy",
                "glacier:GetVaultLock",
                "glacier:ListVaults",
                "globalaccelerator:Describe*",
                "globalaccelerator:List*",
                "glue:GetCrawlers",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetDatabases",
                "glue:GetDevEndpoints",
                "glue:GetJobs",
                "glue:GetResourcePolicy",
                "greengrass:List*",
                "guardduty:DescribePublishingDestination",
                "guardduty:Get*",
                "guardduty:List*",
                "iam:GenerateCredentialReport",
                "iam:GenerateServiceLastAccessedDetails",
                "iam:Get*",
                "iam:List*",
                "iam:SimulateCustomPolicy",
                "iam:SimulatePrincipalPolicy",
                "inspector:Describe*",
                "inspector:Get*",
                "inspector:List*",
                "inspector:Preview*",
                "inspector2:BatchGetAccountStatus",
                "inspector2:BatchGetFreeTrialInfo",
                "inspector2:DescribeOrganizationConfiguration",
                "inspector2:GetDelegatedAdminAccount",
                "inspector2:GetFindingsReportStatus",
                "inspector2:GetMember",
                "inspector2:ListAccountPermissions",
                "inspector2:ListCoverage",
                "inspector2:ListCoverageStatistics",
                "inspector2:ListDelegatedAdminAccounts",
                "inspector2:ListFilters",
                "inspector2:ListFindings",
                "inspector2:ListFindingAggregations",
                "inspector2:GetFindingsReportStatus",
                "inspector2:ListTagsForResource",
                "inspector2:ListUsageTotals",
                "iot:Describe*",
                "iot:GetPolicy",
                "iot:GetPolicyVersion",
                "iot:List*",
                "kafka:Describe*",
                "kafka:List*",
                "kafka-cluster:Describe*",
                "kafkaconnect:Describe*",
                "kafkaconnect:List*",
                "kendra:ListIndices",
                "kinesis:DescribeLimits",
                "kinesis:DescribeStream",
                "kinesis:DescribeStreamConsumer",
                "kinesis:DescribeStreamSummary",
                "kinesis:ListStreamConsumers",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kinesisanalytics:ListApplications",
                "kms:Describe*",
                "kms:Get*",
                "kms:List*",
                "lambda:GetAccountSettings",
                "lambda:GetFunctionConfiguration",
                "lambda:GetFunctionEventInvokeConfig",
                "lambda:GetLayerVersionPolicy",
                "lambda:GetPolicy",
                "lambda:List*",
                "lex:ListBots",
                "license-manager:List*",
                "lightsail:GetInstances",
                "lightsail:GetLoadBalancers",
                "logs:Describe*",
                "logs:ListTagsLogGroup",
                "machinelearning:DescribeMLModels",
                "managedblockchain:ListNetworks",
                "mediaconnect:Describe*",
                "mediaconnect:List*",
                "mediapackage:DescribeOriginEndpoint",
                "mediapackage:ListOriginEndpoints",
                "mediastore:GetContainerPolicy",
                "mediastore:GetCorsPolicy",
                "mediastore:ListContainers",
                "mq:DescribeBroker",
                "mq:DescribeBrokerEngineTypes",
                "mq:DescribeBrokerInstanceOptions",
                "mq:DescribeConfiguration",
                "mq:DescribeConfigurationRevision",
                "mq:DescribeUser",
                "mq:ListBrokers",
                "mq:ListConfigurationRevisions",
                "mq:ListConfigurations",
                "mq:ListTags",
                "mq:ListUsers",
                "network-firewall:ListFirewalls",
                "opsworks-cm:DescribeServers",
                "opsworks:DescribeStacks",
                "organizations:Describe*",
                "organizations:List*",
                "quicksight:Describe*",
                "quicksight:List*",
                "ram:List*",
                "rds:Describe*",
                "rds:DownloadDBLogFilePortion",
                "rds:ListTagsForResource",
                "redshift:Describe*",
                "rekognition:Describe*",
                "rekognition:List*",
                "robomaker:Describe*",
                "robomaker:List*",
                "route53:Get*",
                "route53:List*",
                "route53domains:GetDomainDetail",
                "route53domains:GetOperationDetail",
                "route53domains:ListDomains",
                "route53domains:ListOperations",
                "route53domains:ListTagsForDomain",
                "route53resolver:Get*",
                "route53resolver:List*",
                "s3:GetAccelerateConfiguration",
                "s3:GetAccessPoint",
                "s3:GetAccessPointPolicy",
                "s3:GetAccessPointPolicyStatus",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetAnalyticsConfiguration",
                "s3:GetBucket*",
                "s3:GetEncryptionConfiguration",
                "s3:GetInventoryConfiguration",
                "s3:GetLifecycleConfiguration",
                "s3:GetMetricsConfiguration",
                "s3:GetObjectAcl",
                "s3:GetObjectVersionAcl",
                "s3:GetReplicationConfiguration",
                "s3:ListAccessPoints",
                "s3:ListAllMyBuckets",
                "sagemaker:Describe*",
                "sagemaker:List*",
                "schemas:DescribeCodeBinding",
                "schemas:DescribeDiscoverer",
                "schemas:DescribeRegistry",
                "schemas:DescribeSchema",
                "schemas:ListDiscoverers",
                "schemas:ListRegistries",
                "schemas:ListSchemaVersions",
                "schemas:ListSchemas",
                "schemas:ListTagsForResource",
                "sdb:DomainMetadata",
                "sdb:ListDomains",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:ListSecretVersionIds",
                "secretsmanager:ListSecrets",
                "securityhub:Describe*",
                "securityhub:Get*",
                "securityhub:List*",
                "serverlessrepo:GetApplicationPolicy",
                "serverlessrepo:List*",
                "servicequotas:GetAWSDefaultServiceQuota",
                "servicequotas:GetAssociationForServiceQuotaTemplate",
                "servicequotas:GetRequestedServiceQuotaChange",
                "servicequotas:GetServiceQuota",
                "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                "servicequotas:ListAWSDefaultServiceQuotas",
                "servicequotas:ListRequestedServiceQuotaChangeHistory",
                "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                "servicequotas:ListServiceQuotas",
                "servicequotas:ListServices",
                "servicequotas:ListTagsForResource",
                "ses:Describe*",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityPolicies",
                "ses:GetIdentityVerificationAttributes",
                "ses:ListConfigurationSets",
                "ses:ListIdentities",
                "ses:ListIdentityPolicies",
                "ses:ListReceiptRuleSets",
                "ses:ListVerifiedEmailAddresses",
                "shield:Describe*",
                "shield:List*",
                "snowball:ListClusters",
                "snowball:ListJobs",
                "sns:GetTopicAttributes",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTagsForResource",
                "sns:ListTopics",
                "sqs:GetQueueAttributes",
                "sqs:ListDeadLetterSourceQueues",
                "sqs:ListQueueTags",
                "sqs:ListQueues",
                "ssm:Describe*",
                "ssm:GetAutomationExecution",
                "ssm:ListAssociationVersions",
                "ssm:ListAssociations",
                "ssm:ListCommands",
                "ssm:ListComplianceItems",
                "ssm:ListComplianceSummaries",
                "ssm:ListDocumentMetadataHistory",
                "ssm:ListDocumentVersions",
                "ssm:ListDocuments",
                "ssm:ListInventoryEntries",
                "ssm:ListOpsMetadata",
                "ssm:ListResourceComplianceSummaries",
                "ssm:ListResourceDataSync",
                "ssm:ListTagsForResource",
                "sso:DescribePermissionsPolicies",
                "sso:List*",
                "states:ListStateMachines",
                "storagegateway:DescribeBandwidthRateLimit",
                "storagegateway:DescribeCache",
                "storagegateway:DescribeCachediSCSIVolumes",
                "storagegateway:DescribeGatewayInformation",
                "storagegateway:DescribeMaintenanceStartTime",
                "storagegateway:DescribeNFSFileShares",
                "storagegateway:DescribeSnapshotSchedule",
                "storagegateway:DescribeStorediSCSIVolumes",
                "storagegateway:DescribeTapeArchives",
                "storagegateway:DescribeTapeRecoveryPoints",
                "storagegateway:DescribeTapes",
                "storagegateway:DescribeUploadBuffer",
                "storagegateway:DescribeVTLDevices",
                "storagegateway:DescribeWorkingStorage",
                "storagegateway:List*",
                "sts:GetAccessKeyInfo",
                "support:DescribeTrustedAdvisorCheckRefreshStatuses",
                "support:DescribeTrustedAdvisorCheckResult",
                "support:DescribeTrustedAdvisorCheckSummaries",
                "support:DescribeTrustedAdvisorChecks",
                "tag:GetResources",
                "tag:GetTagKeys",
                "transfer:Describe*",
                "transfer:List*",
                "translate:List*",
                "trustedadvisor:Describe*",
                "waf-regional:GetWebACL",
                "waf-regional:ListResourcesForWebACL",
                "waf-regional:ListTagsForResource",
                "waf-regional:ListWebACLs",
                "waf:GetWebACL",
                "waf:ListTagsForResource",
                "waf:ListWebACLs",
                "wafv2:GetWebACL",
                "wafv2:ListAvailableManagedRuleGroups",
                "wafv2:ListIPSets",
                "wafv2:ListLoggingConfigurations",
                "wafv2:ListRegexPatternSets",
                "wafv2:ListResourcesForWebACL",
                "wafv2:ListRuleGroups",
                "wafv2:ListTagsForResource",
                "wafv2:ListWebACLs",
                "workdocs:DescribeResourcePermissions",
                "workspaces:Describe*",
                "xray:GetEncryptionConfig",
                "xray:GetGroup",
                "xray:GetGroups",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetTraceSummaries",
                "xray:ListTagsForResource",
                "apigateway:GET",
                "acm-pca:ListTags",
                "acm-pca:GetPolicy",
                "acm-pca:ListCertificateAuthorities",
                "airflow:GetEnvironment",
                "airflow:ListEnvironments",
                "backup:ListBackupVaults",
                "backup:ListTags",
                "backup:GetBackupVaultAccessPolicy",
                "cloudwatch:ListTagsForResource",
                "codeartifact:ListDomains",
                "codeartifact:DescribeDomain",
                "codeartifact:GetDomainPermissionsPolicy",
                "codeartifact:ListTagsForResource",
                "codeartifact:ListRepositories",
                "codeartifact:DescribeRepository",
                "codeartifact:GetRepositoryPermissionsPolicy",
                "cognito-identity:ListTagsForResource",
                "cognito-identity:DescribeIdentityPool",
                "cognito-idp:ListTagsForResource",
                "ds:ListTagsForResource",
                "dynamodb:ListTagsOfResource",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:SearchTransitGatewayRoutes",
                "ecr:DescribeImages",
                "ecr:GetLifecyclePolicy",
                "ecr:GetRegistryScanningConfiguration",
                "ecr:ListTagsForResource",
                "ecr-public:ListTagsForResource",
                "eks:ListFargateProfiles",
                "eks:DescribeFargateProfile",
                "eks:ListTagsForResource",
                "elasticbeanstalk:ListTagsForResource",
                "elasticfilesystem:DescribeTags",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticache:ListTagsForResource",
                "es:ListTags",
                "glacier:GetVaultLock",
                "glacier:ListTagsForVault",
                "glue:GetConnections",
                "glue:GetSecurityConfigurations",
                "kafka:ListClusters",
                "lambda:GetFunctionUrlConfig",
                "lex:GetBot",
                "lex:GetBots",
                "lex:GetBotVersions",
                "lex:ListTagsForResource",
                "lex:ListBotVersions",
                "lex:ListBots",
                "lex:DescribeBotVersion",
                "lex:DescribeBot",
                "lakeformation:GetDataLakeSettings",
                "logs:GetLogEvents",
                "mq:listBrokers",
                "mq:describeBroker",
                "mediastore:ListTagsForResource",
                "mediastore:GetCorsPolicy",
                "ram:GetResourceShares",
                "sns:ListTagsForResource",
                "sns:ListPlatformApplications",
                "ssm:GetDocument",
                "ssm:GetParameters",
                "ssm:ListTagsForResource",
                "elasticmapreduce:ListSecurityConfigurations",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "sns:listSubscriptions",
                "wafv2:ListResourcesForWebACL",
                "wafv2:ListWebACLs",
                "wafv2:ListTagsForResource",
                "wafv2:GetWebACL",
                "wafv2:GetLoggingConfiguration",
                "waf:GetWebACL",
                "waf:ListTagsForResource",
                "waf:GetLoggingConfiguration",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:ListResourcesForWebACL",
                "waf-regional:ListTagsForResource",
                "codebuild:BatchGetProjects",
                "s3:DescribeJob",
                "s3:ListJobs",
                "s3:GetJobTagging",
                "ssm:GetInventory",
                "shield:GetSubscriptionState",
                "storagegateway:DescribeSMBFileShares",
                "storagegateway:DescribeSMBSettings",
                "iam:UpdateAccountPasswordPolicy",
                "ec2:ModifyImageAttribute",
                "rds:ModifyDBSnapshotAttribute",
                "s3:PutBucketAcl",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:ModifySnapshotAttribute",
                "cloudtrail:UpdateTrail",
                "rds:ModifyDBInstance",
                "redshift:ModifyCluster",
                "kms:EnableKeyRotation",
                "rds:ModifyEventSubscription",
                "eks:UpdateClusterConfig",
                "ec2:ModifySubnetAttribute",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "cloudtrail:StartLogging",
                "elasticache:ModifyReplicationGroup",
                "s3:PutBucketVersioning",
                "s3:PutBucketPublicAccessBlock",
                "lambda:UpdateFunctionConfiguration",
                "ecs:UpdateClusterSettings",
                "rds:ModifyDBCluster",
                "rds:ModifyDBClusterSnapshotAttribute",
                "acm:UpdateCertificateOptions",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:GetObjectTagging",
                "s3:GetObjectVersion",
                "s3:GetObjectVersionAcl",
                "s3:GetBucketAcl",
                "s3:GetBucketPolicy",
                "s3:GetBucketPolicyStatus",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetBucketTagging",
                "s3:GetBucketVersioning",
                "s3:GetEncryptionConfiguration",
                "s3:GetBucketLocation",
                "s3:GetBucketNotification",
                "s3:ListBucket",
                "s3:ListBucketVersions",
                "s3:ListAllMyBuckets",
                "sns:GetSubscriptionAttributes",
                "sns:listSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "s3:GetObjectVersionTagging",
                "s3:DeleteObjectVersionTagging",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionAcl",
                "s3:DeleteObjectVersion",
                "s3:DeleteObjectTagging",
                "s3:DeleteObject",
                "s3:PutBucketAcl",
                "s3:PutBucketPolicy",
                "s3:PutBucketPublicAccessBlock",
                "s3:PutBucketTagging",
                "s3:DeleteBucketPolicy",
                "s3:PutInventoryConfiguration",
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetLifecyclePolicyPreview",
                "kms:Decrypt",
                "secretsmanager:GetSecretValue",
                "ssm:GetParameter",
                "ssm:ListCommandInvocations",
                "lambda:GetFunction",
                "lambda:GetLayerVersion",
                "apigateway:GET",
                "lambda:PublishLayerVersion",
                "lambda:UpdateFunctionConfiguration",
                "lambda:DeleteLayerVersion",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:DeleteSecurityGroup",
                "ec2:RunInstances",
                "ec2:TerminateInstances",
                "securityhub:BatchImportFindings",
                "logs:StartQuery",
                "logs:GetQueryResults",
                "ec2:DeleteSnapshot",
                "ec2:ModifySnapshotAttribute",
                "ec2:TerminateInstances",
                "ec2:CreateTags",
                "ec2:CreateSnapshots",
                "ec2:CreateSnapshot",
                "ec2:RunInstances",
                "sts:DecodeAuthorizationMessage",
                "sts:GetCallerIdentity",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:ReEncryptFrom",
                "kms:Encrypt",
                "kms:ReEncryptTo",
                "kms:CreateGrant",
                "ssm:GetParameters",
                "ssm:SendCommand",
                "ssm:CreateAssociation",
                "ssm:ListCommandInvocations",
                "ssm:CancelCommand",
                "s3:ListBucket",
                "lambda:GetLayerVersion",
                "lambda:GetEventSourceMapping",
                "lambda:GetFunction",
                "sns:GetSubscriptionAttributes"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "apigateway:GET"
            ],
            "Resource": [
                "arn:aws:apigateway:*::/apis",
                "arn:aws:apigateway:*::/apis/*/routes",
                "arn:aws:apigateway:*::/apis/*/stages",
                "arn:aws:apigateway:*::/apis/*/stages/*",
                "arn:aws:apigateway:*::/clientcertificates/*",
                "arn:aws:apigateway:*::/restapis",
                "arn:aws:apigateway:*::/restapis/*/authorizers",
                "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                "arn:aws:apigateway:*::/restapis/*/documentation/versions",
                "arn:aws:apigateway:*::/restapis/*/resources",
                "arn:aws:apigateway:*::/restapis/*/resources/*",
                "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                "arn:aws:apigateway:*::/restapis/*/stages",
                "arn:aws:apigateway:*::/restapis/*/stages/*",
                "arn:aws:apigateway:*::/tags/*",
                "arn:aws:apigateway:*::/vpclinks"
            ]
        }
    ]
}
